# Copy this file to .env and modify all values according to your deployment environment
# DO NOT commit the actual .env file to version control - it contains sensitive information

# =============================================================================
# JWT AUTHENTICATION CONFIGURATION
# =============================================================================

# Secret key for JWT token signing
# SECURITY: This MUST be changed in production and kept secret
# Generate a secure key using one of these methods:
#   - openssl rand -hex 32
#   - python -c "import secrets; print(secrets.token_hex(32))"
#   - Use a password manager to generate a 64-character hex string
SECRET_KEY=your-super-secret-jwt-key-change-this-in-production

# JWT algorithm for token encoding/decoding
# Recommended: HS256 for simplicity, RS256 for distributed systems
JWT_ALGORITHM=HS256

# JWT token expiration time in days
# Shorter periods are more secure but require more frequent re-authentication
# Recommended: 1-30 days depending on security requirements
ACCESS_TOKEN_EXPIRE_DAYS=30

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Database connection URL
# SQLite (development): sqlite:///./library.db
# PostgreSQL (production): postgresql://user:password@localhost:5432/library_db
# MySQL (production): mysql://user:password@localhost:3306/library_db
DATABASE_URL=sqlite:///./library.db

# Database connection pool settings (for PostgreSQL/MySQL)
# Adjust based on expected concurrent users and server capacity
DB_POOL_SIZE=5
DB_MAX_OVERFLOW=10
DB_POOL_TIMEOUT=30

# =============================================================================
# CORS AND SECURITY CONFIGURATION
# =============================================================================

# Comma-separated list of allowed origins for cross-origin requests
# Include all domains where your frontend will be hosted
# Examples:
#   Development: http://localhost:5173,http://localhost:3000
#   Production: https://yourdomain.com,https://www.yourdomain.com
#   Clacky: https://app.clacky.com
ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3000

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Server host and port
# Use 0.0.0.0 to accept connections from any IP (required for Docker)
# Use 127.0.0.1 for localhost-only access
HOST=0.0.0.0
PORT=8000

# Application environment
# Options: development, staging, production
# Affects logging levels and error reporting
ENVIRONMENT=development

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level controls the verbosity of application logs
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
# Use DEBUG in development, INFO or WARNING in production
LOG_LEVEL=INFO

# Optional: Log file path for persistent logging
# Leave empty to log to console only
# Example: /var/log/library/app.log
LOG_FILE_PATH=

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# Password hashing rounds for bcrypt
# Higher values are more secure but slower
# Recommended: 12-14 for production, 10-12 for development
BCRYPT_ROUNDS=12

# Session timeout in minutes
# How long users stay logged in without activity
SESSION_TIMEOUT_MINUTES=60

# API rate limiting (requests per minute per IP address)
# Helps prevent abuse and DoS attacks
RATE_LIMIT_PER_MINUTE=100

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================

# Maximum file size for uploads in bytes
# 10MB = 10485760 bytes, 50MB = 52428800 bytes
MAX_UPLOAD_SIZE=10485760

# Comma-separated list of allowed file extensions
# Include the dot prefix for each extension
ALLOWED_EXTENSIONS=.pdf,.doc,.docx,.txt,.jpg,.jpeg,.png

# =============================================================================
# EMAIL CONFIGURATION (Optional - for notifications)
# =============================================================================

# SMTP server configuration for sending emails
# Leave empty if email features are not needed
SMTP_HOST=smtp.your-email-provider.com
SMTP_PORT=587
SMTP_USERNAME=your-email@domain.com
SMTP_PASSWORD=your-email-password
SMTP_USE_TLS=true

# Admin email address for system notifications
ADMIN_EMAIL=admin@yourdomain.com

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable/disable specific application features
# Set to true/false as needed for your deployment

# Allow new users to register accounts
ENABLE_USER_REGISTRATION=true

# Send email notifications for due dates, overdue books, etc.
ENABLE_EMAIL_NOTIFICATIONS=false

# Provide book recommendations to users
ENABLE_BOOK_RECOMMENDATIONS=true

# Enable advanced search functionality
ENABLE_ADVANCED_SEARCH=true

# =============================================================================
# CACHE CONFIGURATION (Optional - for Redis integration)
# =============================================================================

# Redis server configuration for caching and sessions
# Leave empty if not using Redis
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================

# Automatic database backup settings
ENABLE_AUTO_BACKUP=true
BACKUP_INTERVAL_HOURS=24
BACKUP_RETENTION_DAYS=30
BACKUP_PATH=./backups

# =============================================================================
# PRODUCTION DEPLOYMENT NOTES
# =============================================================================

# 1. ALWAYS change the SECRET_KEY to a unique, random value
# 2. Use strong database credentials and restrict database access
# 3. Set ENVIRONMENT=production for production deployments
# 4. Use HTTPS URLs in ALLOWED_ORIGINS for production
# 5. Consider using a reverse proxy (nginx, Apache) in front of the application
# 6. Set up proper firewall rules to restrict access to the database port
# 7. Enable database backups and test restore procedures
# 8. Monitor logs and set up alerting for errors
# 9. Use environment-specific configuration management tools for large deployments
# 10. Regularly update dependencies and security patches

# =============================================================================
# SECURITY CHECKLIST FOR PRODUCTION
# =============================================================================

# □ SECRET_KEY is randomly generated and unique
# □ Database credentials are strong and not shared
# □ ALLOWED_ORIGINS only includes trusted domains
# □ LOG_LEVEL is set to INFO or WARNING (not DEBUG)
# □ File upload restrictions are properly configured
# □ Rate limiting is enabled and configured appropriately
# □ HTTPS is used for all external communications
# □ Database backups are configured and tested
# □ Monitoring and alerting are set up
# □ Security updates are applied regularly
